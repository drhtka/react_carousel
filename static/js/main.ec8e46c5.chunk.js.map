{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","_useState","useState","_useState2","_slicedToArray","indexStart","setIndexImage","styleCourse","width","concat","styleImages","transitionDuration","transform","_jsxs","className","style","children","_jsx","map","image","index","src","alt","toString","type","disabled","onClick","stepShift","smile","size","isEnoughImages","length","moveBack","moveForward","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","handleChange","event","setState","prevState","_objectSpread","_defineProperty","target","name","value","_createClass","key","_this2","_this$state","this","method","htmlFor","id","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec8e46c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  itemWidth: number,\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [indexStart, setIndexImage] = useState(0);\n\n  const moveForward = (stepShift: number, smile: string[], size: number) => {\n    const isEnoughImages = indexStart + stepShift >= smile.length - size;\n\n    if (isEnoughImages && !Infinity) {\n      setIndexImage(smile.length - size);\n    } else if (isEnoughImages && infinite) {\n      setIndexImage(0);\n    } else {\n      setIndexImage(indexStart + stepShift);\n    }\n  };\n\n  const moveBack = (stepShift: number, smile: string[], size: number) => {\n    const isEnoughImages = indexStart - stepShift < 0;\n\n    if (isEnoughImages && !infinite) {\n      setIndexImage(0);\n    } else if (isEnoughImages && infinite) {\n      setIndexImage(smile.length - size);\n    } else {\n      setIndexImage(indexStart - stepShift);\n    }\n  };\n\n  const styleCourse = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  const styleImages = {\n    transitionDuration: `${animationDuration}ms`,\n    transform: `translateX(-${indexStart * itemWidth}px)`,\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={styleCourse}\n    >\n      <ul\n        className=\"Carousel__list\"\n      >\n        {images.map((image, index) => (\n          <li\n            key={image}\n            style={styleImages}\n          >\n            <img\n              src={image}\n              alt={index.toString()}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n\n      </ul>\n      <div>\n        <button\n          type=\"button\"\n          disabled={indexStart === 0 && !infinite}\n          onClick={() => {\n            moveBack(step, images, frameSize);\n          }}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={indexStart > images.length - frameSize - 1 && !infinite}\n          onClick={() => {\n            moveForward(step, images, frameSize);\n          }}\n        >\n          Next\n        </button>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(prevState => ({\n      ...prevState,\n      [event.target.name]: +event.target.value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <form method=\"post\" className=\"App__form\">\n\n          <label htmlFor=\"itemWidth\" className=\"itemWidth\">\n            ITEM WIDTH:\n            <input\n              id=\"itemID\"\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min={130}\n              max={1300}\n              onChange={this.handleChange}\n            />\n          </label>\n          <br />\n          <label htmlFor=\"framId\" className=\"framSize\">\n            FRAME SIZE\n            <input\n              id=\"frameID\"\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={this.handleChange}\n            />\n\n          </label>\n\n          <br />\n          <label htmlFor=\"stepID\" className=\"itemWidth\">\n            STEP:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min={1}\n              max={10}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <br />\n          <label htmlFor=\"durationID\" className=\"itemWidth\">\n            ANIMATION DURATION:\n            <input\n              id=\"durationID\"\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min={100}\n              max={1000000}\n              step={100}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <br />\n          <label htmlFor=\"infinitID\" className=\"itemWidth\">\n            INFINITE\n            <input\n              type=\"checkbox\"\n              id=\"infineteID\"\n              name=\"infinite\"\n              onClick={() => {\n                this.setState({\n                  infinite: !infinite,\n                });\n              }}\n            />\n          </label>\n\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}